{"{\"assumptions\":{},\"sourceRoot\":\"A:\\\\Blockchainformedia\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"A:\\\\Blockchainformedia\",\"filename\":\"A:\\\\Blockchainformedia\\\\test\\\\Payment.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"A:\\\\Blockchainformedia\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const {\n  expect\n} = require(\"chai\");\nconst Payment = artifacts.require(\"Payment\");\nconst AccessControl = artifacts.require(\"AccessControl\");\nconst ERC20 = artifacts.require(\"ERC20\"); // Assuming you have an ERC20 token contract for testing\n\ncontract(\"Payment\", accounts => {\n  let payment;\n  let paymentToken;\n  const [owner, admin, creator, user] = accounts;\n  beforeEach(async () => {\n    // Deploy an ERC20 token for payment\n    paymentToken = await ERC20.new(\"TestToken\", \"TT\", 1000000, {\n      from: owner\n    });\n\n    // Deploy the AccessControl contract\n    const accessControl = await AccessControl.new();\n    await accessControl.addAdmin(admin, {\n      from: owner\n    });\n\n    // Deploy the Payment contract\n    payment = await Payment.new(paymentToken.address, 5, owner); // 5% platform fee\n\n    // Mint some tokens to the user for testing\n    await paymentToken.transfer(user, 1000, {\n      from: owner\n    });\n  });\n  describe(\"Payment Processing\", () => {\n    it(\"should allow users to process a payment\", async () => {\n      const amount = 100;\n      await paymentToken.approve(payment.address, amount, {\n        from: user\n      });\n      const userBalanceBefore = await paymentToken.balanceOf(user);\n      const creatorBalanceBefore = await paymentToken.balanceOf(creator);\n      const platformBalanceBefore = await paymentToken.balanceOf(owner);\n      await payment.processPayment(user, creator, amount, {\n        from: admin\n      });\n      const userBalanceAfter = await paymentToken.balanceOf(user);\n      const creatorBalanceAfter = await paymentToken.balanceOf(creator);\n      const platformBalanceAfter = await paymentToken.balanceOf(owner);\n      expect(userBalanceAfter.toString()).to.equal(userBalanceBefore.sub(amount).toString());\n      expect(creatorBalanceAfter.toString()).to.equal(creatorBalanceBefore.add(amount * 0.95).toString()); // 95% to creator\n      expect(platformBalanceAfter.toString()).to.equal(platformBalanceBefore.add(amount * 0.05).toString()); // 5% to platform\n    });\n    it(\"should revert if the payment amount is zero\", async () => {\n      await expect(payment.processPayment(user, creator, 0, {\n        from: admin\n      })).to.be.revertedWith(\"Payment amount must be greater than zero\");\n    });\n    it(\"should revert if the buyer has insufficient allowance\", async () => {\n      const amount = 100;\n      await expect(payment.processPayment(user, creator, amount, {\n        from: admin\n      })).to.be.revertedWith(\"Platform fee transfer failed\");\n    });\n  });\n  describe(\"Platform Fee Management\", () => {\n    it(\"should allow the admin to update the platform fee\", async () => {\n      await payment.updatePlatformFee(10, {\n        from: admin\n      });\n      const newFee = await payment.platformFee();\n      expect(newFee.toString()).to.equal(\"10\");\n    });\n    it(\"should emit an event when the platform fee is updated\", async () => {\n      const oldFee = await payment.platformFee();\n      const tx = await payment.updatePlatformFee(10, {\n        from: admin\n      });\n      const newFee = await payment.platformFee();\n      expect(tx.logs[0].event).to.equal(\"PlatformFeeUpdated\");\n      expect(tx.logs[0].args.oldFee.toString()).to.equal(oldFee.toString());\n      expect(tx.logs[0].args.newFee.toString()).to.equal(\"10\");\n    });\n    it(\"should not allow non-admin to update the platform fee\", async () => {\n      await expect(payment.updatePlatformFee(10, {\n        from: creator\n      })).to.be.revertedWith(\"Only the admin can perform this action\");\n    });\n    it(\"should not allow invalid platform fee updates\", async () => {\n      await expect(payment.updatePlatformFee(101, {\n        from: admin\n      })).to.be.revertedWith(\"Invalid fee percentage\");\n    });\n  });\n  describe(\"Platform Wallet Management\", () => {\n    it(\"should allow the admin to update the platform wallet\", async () => {\n      const newWallet = accounts[2];\n      await payment.updatePlatformWallet(newWallet, {\n        from: admin\n      });\n      const updatedWallet = await payment.platformWallet();\n      expect(updatedWallet).to.equal(newWallet);\n    });\n    it(\"should emit an event when the platform wallet is updated\", async () => {\n      const oldWallet = await payment.platformWallet();\n      const newWallet = accounts[2];\n      const tx = await payment.updatePlatformWallet(newWallet, {\n        from: admin\n      });\n      expect(tx.logs[0].event).to.equal(\"PlatformWalletUpdated\");\n      expect(tx.logs[0].args.oldWallet).to.equal(oldWallet);\n      expect(tx.logs[0].args.newWallet).to.equal(newWallet);\n    });\n    it(\"should not allow non-admin to update the platform wallet\", async () => {\n      await expect(payment.updatePlatformWallet(accounts[2], {\n        from: creator\n      })).to.be.revertedWith(\"Only the admin can perform this action\");\n    });\n    it(\"should not allow setting the platform wallet to the zero address\", async () => {\n      await expect(payment.updatePlatformWallet(\"0x0000000000000000000000000000000000000000\", {\n        from: admin\n      })).to.be.revertedWith(\"New wallet address cannot be zero address\");\n    });\n  });\n  describe(\"Withdraw Tokens\", () => {\n    it(\"should allow the owner to withdraw mistakenly sent tokens\", async () => {\n      await paymentToken.transfer(payment.address, 100, {\n        from: owner\n      });\n      const balanceBefore = await paymentToken.balanceOf(owner);\n      await payment.withdrawTokens(paymentToken.address, owner, 50, {\n        from: owner\n      });\n      const balanceAfter = await paymentToken.balanceOf(owner);\n      expect(balanceAfter.toString()).to.equal(balanceBefore.add(50).toString());\n    });\n    it(\"should revert if trying to withdraw more than the contract balance\", async () => {\n      await paymentToken.transfer(payment.address, 100, {\n        from: owner\n      });\n      await expect(payment.withdrawTokens(paymentToken.address, owner, 200, {\n        from: owner\n      })).to.be.revertedWith(\"Insufficient token balance\");\n    });\n    it(\"should not allow non-owner to withdraw tokens\", async () => {\n      await expect(payment.withdrawTokens(paymentToken.address, owner, 50, {\n        from: admin\n      })).to.be.revertedWith(\"Ownable: caller is not the owner\");\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["expect","require","Payment","artifacts","AccessControl","ERC20","contract","accounts","payment","paymentToken","owner","admin","creator","user","beforeEach","new","from","accessControl","addAdmin","address","transfer","describe","it","amount","approve","userBalanceBefore","balanceOf","creatorBalanceBefore","platformBalanceBefore","processPayment","userBalanceAfter","creatorBalanceAfter","platformBalanceAfter","toString","to","equal","sub","add","be","revertedWith","updatePlatformFee","newFee","platformFee","oldFee","tx","logs","event","args","newWallet","updatePlatformWallet","updatedWallet","platformWallet","oldWallet","balanceBefore","withdrawTokens","balanceAfter"],"sourceRoot":"A:\\Blockchainformedia\\test\\","sources":["Payment.test.js"],"sourcesContent":["const { expect } = require(\"chai\");\r\nconst Payment = artifacts.require(\"Payment\");\r\nconst AccessControl = artifacts.require(\"AccessControl\");\r\nconst ERC20 = artifacts.require(\"ERC20\"); // Assuming you have an ERC20 token contract for testing\r\n\r\ncontract(\"Payment\", (accounts) => {\r\n    let payment;\r\n    let paymentToken;\r\n    const [owner, admin, creator, user] = accounts;\r\n\r\n    beforeEach(async () => {\r\n        // Deploy an ERC20 token for payment\r\n        paymentToken = await ERC20.new(\"TestToken\", \"TT\", 1000000, { from: owner });\r\n\r\n        // Deploy the AccessControl contract\r\n        const accessControl = await AccessControl.new();\r\n        await accessControl.addAdmin(admin, { from: owner });\r\n\r\n        // Deploy the Payment contract\r\n        payment = await Payment.new(paymentToken.address, 5, owner); // 5% platform fee\r\n\r\n        // Mint some tokens to the user for testing\r\n        await paymentToken.transfer(user, 1000, { from: owner });\r\n    });\r\n\r\n    describe(\"Payment Processing\", () => {\r\n        it(\"should allow users to process a payment\", async () => {\r\n            const amount = 100;\r\n            await paymentToken.approve(payment.address, amount, { from: user });\r\n\r\n            const userBalanceBefore = await paymentToken.balanceOf(user);\r\n            const creatorBalanceBefore = await paymentToken.balanceOf(creator);\r\n            const platformBalanceBefore = await paymentToken.balanceOf(owner);\r\n\r\n            await payment.processPayment(user, creator, amount, { from: admin });\r\n\r\n            const userBalanceAfter = await paymentToken.balanceOf(user);\r\n            const creatorBalanceAfter = await paymentToken.balanceOf(creator);\r\n            const platformBalanceAfter = await paymentToken.balanceOf(owner);\r\n\r\n            expect(userBalanceAfter.toString()).to.equal(userBalanceBefore.sub(amount).toString());\r\n            expect(creatorBalanceAfter.toString()).to.equal(creatorBalanceBefore.add(amount * 0.95).toString()); // 95% to creator\r\n            expect(platformBalanceAfter.toString()).to.equal(platformBalanceBefore.add(amount * 0.05).toString()); // 5% to platform\r\n        });\r\n\r\n        it(\"should revert if the payment amount is zero\", async () => {\r\n            await expect(payment.processPayment(user, creator, 0, { from: admin })).to.be.revertedWith(\"Payment amount must be greater than zero\");\r\n        });\r\n\r\n        it(\"should revert if the buyer has insufficient allowance\", async () => {\r\n            const amount = 100;\r\n            await expect(payment.processPayment(user, creator, amount, { from: admin })).to.be.revertedWith(\"Platform fee transfer failed\");\r\n        });\r\n    });\r\n\r\n    describe(\"Platform Fee Management\", () => {\r\n        it(\"should allow the admin to update the platform fee\", async () => {\r\n            await payment.updatePlatformFee(10, { from: admin });\r\n            const newFee = await payment.platformFee();\r\n            expect(newFee.toString()).to.equal(\"10\");\r\n        });\r\n\r\n        it(\"should emit an event when the platform fee is updated\", async () => {\r\n            const oldFee = await payment.platformFee();\r\n            const tx = await payment.updatePlatformFee(10, { from: admin });\r\n            const newFee = await payment.platformFee();\r\n\r\n            expect(tx.logs[0].event).to.equal(\"PlatformFeeUpdated\");\r\n            expect(tx.logs[0].args.oldFee.toString()).to.equal(oldFee.toString());\r\n            expect(tx.logs[0].args.newFee.toString()).to.equal(\"10\");\r\n        });\r\n\r\n        it(\"should not allow non-admin to update the platform fee\", async () => {\r\n            await expect(payment.updatePlatformFee(10, { from: creator })).to.be.revertedWith(\"Only the admin can perform this action\");\r\n        });\r\n\r\n        it(\"should not allow invalid platform fee updates\", async () => {\r\n            await expect(payment.updatePlatformFee(101, { from: admin })).to.be.revertedWith(\"Invalid fee percentage\");\r\n        });\r\n    });\r\n\r\n    describe(\"Platform Wallet Management\", () => {\r\n        it(\"should allow the admin to update the platform wallet\", async () => {\r\n            const newWallet = accounts[2];\r\n            await payment.updatePlatformWallet(newWallet, { from: admin });\r\n            const updatedWallet = await payment.platformWallet();\r\n            expect(updatedWallet).to.equal(newWallet);\r\n        });\r\n\r\n        it(\"should emit an event when the platform wallet is updated\", async () => {\r\n            const oldWallet = await payment.platformWallet();\r\n            const newWallet = accounts[2];\r\n            const tx = await payment.updatePlatformWallet(newWallet, { from: admin });\r\n\r\n            expect(tx.logs[0].event).to.equal(\"PlatformWalletUpdated\");\r\n            expect(tx.logs[0].args.oldWallet).to.equal(oldWallet);\r\n            expect(tx.logs[0].args.newWallet).to.equal(newWallet);\r\n        });\r\n\r\n        it(\"should not allow non-admin to update the platform wallet\", async () => {\r\n            await expect(payment.updatePlatformWallet(accounts[2], { from: creator })).to.be.revertedWith(\"Only the admin can perform this action\");\r\n        });\r\n\r\n        it(\"should not allow setting the platform wallet to the zero address\", async () => {\r\n            await expect(payment.updatePlatformWallet(\"0x0000000000000000000000000000000000000000\", { from: admin })).to.be.revertedWith(\"New wallet address cannot be zero address\");\r\n        });\r\n    });\r\n\r\n    describe(\"Withdraw Tokens\", () => {\r\n        it(\"should allow the owner to withdraw mistakenly sent tokens\", async () => {\r\n            await paymentToken.transfer(payment.address, 100, { from: owner });\r\n            const balanceBefore = await paymentToken.balanceOf(owner);\r\n            await payment.withdrawTokens(paymentToken.address, owner, 50, { from: owner });\r\n\r\n            const balanceAfter = await paymentToken.balanceOf(owner);\r\n            expect(balanceAfter.toString()).to.equal(balanceBefore.add(50).toString());\r\n        });\r\n\r\n        it(\"should revert if trying to withdraw more than the contract balance\", async () => {\r\n            await paymentToken.transfer(payment.address, 100, { from: owner });\r\n            await expect(payment.withdrawTokens(paymentToken.address, owner, 200, { from: owner })).to.be.revertedWith(\"Insufficient token balance\");\r\n        });\r\n\r\n        it(\"should not allow non-owner to withdraw tokens\", async () => {\r\n            await expect(payment.withdrawTokens(paymentToken.address, owner, 50, { from: admin })).to.be.revertedWith(\"Ownable: caller is not the owner\");\r\n        });\r\n    });\r\n});\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1727713286174}}